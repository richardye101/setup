# Set colors for nvim in tmux
set-option -sa terminal-overrides ",xterm*:Tc"

#Use mouse in tmux between panes etc
set -g mouse on

# remap prefix from 'C-b' to 'C-Space'
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Move between windows using vim-like commands
# bind -n M-H previous-window # Ctrl + h
# bind -n M-L next-window # Ctrl + l

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}" # Ctrl + |
bind - split-window -v -c "#{pane_current_path}" # Ctrl + -
unbind '"'
unbind %

# Resize panes using Alt + arrow keys
bind M-Left  resize-pane -L 5
bind M-Right resize-pane -R 5
bind M-Up    resize-pane -U 5
bind M-Down  resize-pane -D 5

# use vim keys to copy with tmux-yank
set -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection # start selection with v
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle # toggle to line mode
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel # yank to clipboard

# Start windows and panes numbering at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(n?vim?x?)$'"

bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Optional: enable repeatable key sequences
setw -g repeat-time 500

# List of plugins: to install press <prefix> + I
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# duplicate an ssh session if we open a new window
bind S neww "$(ps -ao pid,tty,args | sort | awk '$1 ~ /#{pane_pid}/{VAR=$2} $2 ~ VAR && $3 ~ /ssh/{$1=""; $2=""; print}')"
